<?php
/**
 * @file
 * Module file for miniOrange sso Module.
 */

function add_js_css_fonts() {
  drupal_add_css( drupal_get_path('module', 'gluu_sso') . '/files/css/gluu_oxd_scripts.css' );
  drupal_add_js('https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js', 'external');
  drupal_add_js(drupal_get_path('module', 'gluu_sso') . '/files/js/scope-custom-script.js' );
  drupal_add_js( drupal_get_path('module', 'gluu_sso') . '/files/js/gluu_oxd_scripts.js' );

}
add_js_css_fonts() ;

/**
 * Implements hook_menu().
 */
function gluu_sso_menu() {

  $items['admin/config/people/gluu_sso243'] = array(
    'title' => 'Gluu SSO 2.4.3/ Gluu and social login configuration',
    'description' => 'Use OpenID Connect to login by leveraging the oxd client service demon.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gluu_sso_general_setup'),
    'access arguments' => array('administer site configuration'),
    'file' => 'gluu_sso_general_setup.inc',
  );

  $items['admin/config/people/gluu_sso243/general'] = array(
    'title' => t('General'),
    'weight' => -5,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('gluu_sso_general_setup'),
    'file' => 'gluu_sso_general_setup.inc',
  );

  $items['admin/config/people/gluu_sso243/scopes_scripts'] = array(
    'title' => t('OpenID Connect Configuration'),
    'weight' => -4,
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('gluu_sso_scopes_scripts_setup'),
    'file' => 'gluu_sso_scopes_scripts_setup_details.inc',
  );

  $items['admin/config/people/gluu_sso243/config_form_setup'] = array(
    'title' => t('Drupal Configuration'),
    'weight' => -3,
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('gluu_sso_config_form'),
    'file' => 'gluu_sso_config_form_setup.inc',
  );

  $items['admin/config/people/gluu_sso243/how_it_works'] = array(
      'title' => t('Help & Troubleshooting'),
      'weight' => -1,
      'type' => MENU_LOCAL_TASK,
      'access arguments' => array('administer site configuration'),
      'page arguments' => array('gluu_sso_workflow'),
      'file' => 'gluu_sso_workflow.inc',
  );

  return $items;
}
/**
 * Implements hook_user_login_alter().
 */
function gluu_sso_form_user_login_alter(&$form, $form_state) {
  $sso_login_enabled = variable_get('gluu_sso_enable_login', FALSE);
  if (!empty($sso_login_enabled)) {
    array_unshift($form['#validate'], 'gluu_sso_login_validate');
  }
}

/**
 * Implements hook_user_login_block_alter().
 */

function gluu_sso_form_user_login_block_alter(&$form, &$form_state) {
  if(isset($_GET['gluuOption'])){
    oxd_openid_login_validate();
  }
  $form['markup_2'] = array(
      '#markup' =>login_html(),
      );
  $form['links']['#weight'] = 1;
}
function oxd_openid_load_login_script() {
  drupal_add_css(drupal_get_path('module', 'gluu_sso') . '/files/css/oxd_openid_style.css');
  drupal_add_css(drupal_get_path('module', 'gluu_sso') . '/files/css/bootstrap-social.css');
  drupal_add_css(drupal_get_path('module', 'gluu_sso') . '/files/css/bootstrap.min.css');
  drupal_add_css(drupal_get_path('module', 'gluu_sso') . '/files/css/font-awesome.min.css');
  drupal_add_css(drupal_get_path('module', 'gluu_sso') . '/files/css/font-awesome.css');
  ?>
  <script type="text/javascript">
    function oxdOpenIdLogin(app_name) {
      <?php
      global $base_url;
          if(isset($_SERVER['HTTPS']) && !empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off'){
              $http = "https://";
          } else {
              $http =  "http://";
          }
          if ( strpos($_SERVER['REQUEST_URI'],'wp-login.php') !== FALSE){
                  $redirect_url = $base_url . '/wp-login.php?gluuOption=getOxdSocialLogin&app_name=';

          }else{
                  $redirect_url = $http . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
                  if(strpos($redirect_url, '?') !== false) {
                      $redirect_url .= '&gluuOption=getOxdSocialLogin&app_name=';
                  } else {
                      $redirect_url .= '?gluuOption=getOxdSocialLogin&app_name=';
                  }
          }
      ?>
      window.location.href = '<?php echo $redirect_url; ?>' + app_name;
    }
  </script>
  <?php
}

function login_html(){
  $selected_theme = variable_get('oxd_openid_login_theme');
  $custom_scripts = variable_get('oxd_openid_custom_scripts');
  $appsConfigured = 0;
  foreach($custom_scripts as $custom_script){
    if(variable_get('oxd_openid_'.$custom_script['value'].'_enable') ){
      $appsConfigured = variable_get('oxd_openid_'.$custom_script['value'].'_enable');
    }
  }
  $spacebetweenicons = variable_get('oxd_login_icon_space');
  $customWidth = variable_get('oxd_login_icon_custom_width');
  $customHeight = variable_get('oxd_login_icon_custom_height');
  $customSize = variable_get('oxd_login_icon_custom_size');
  $customBackground = variable_get('oxd_login_icon_custom_color');
  $customTheme = variable_get('oxd_openid_login_custom_theme');
  $customTextofTitle = variable_get('oxd_openid_login_button_customize_text');
  $html ='';
  if( $appsConfigured ) {
    oxd_openid_load_login_script();
    $html.='
    <div class="oxd-openid-app-icons">
      <p>Connect with:</p>';

      $custom_scripts = variable_get('oxd_openid_custom_scripts');
      if($customTheme == 'default'){
        foreach($custom_scripts as $custom_script){
          if( variable_get('oxd_openid_'.$custom_script['value'].'_enable') ) {
            if($selected_theme == 'longbutton'){
              $html.='<a onClick="oxdOpenIdLogin('.$custom_script['value'].');" style="width:'.$customWidth.'px !important;padding-top:'.($customHeight-29).'px !important;padding-bottom:'.($customHeight-29).'px !important;margin-bottom:'.($spacebetweenicons-5).'px !important" class="btn btn-block btn-social btn-facebook  btn-custom-size login-button" >
              <i style="padding-top:'.($customHeight-35).'px !important" class="fa fa-facebook"></i>'.variable_get('oxd_openid_login_button_customize_text').' '.$custom_script['name'].'</a>';
             }
            else{
              $k = 'oxdOpenIdLogin("'.$custom_script['value'].'")';
                  $html.="<a onclick=' $k '>
                            <img
                              style='
                                      width:".$customSize."px !important;
                                      height:".$customSize."px !important;
                                      margin-left:".($spacebetweenicons-4)."px !important
                                    '
                              src='".$custom_script['image']."'
                              class='".$selected_theme." login-button'
                            />
                          </a>";
             }
          }
        }
      }
      if($customTheme == 'custom'){
        foreach($custom_scripts as $custom_script){
          if( variable_get('oxd_openid_'.$custom_script['value'].'_enable') ) {
            if($selected_theme == 'longbutton'){
              $html.='<a  onClick="oxdOpenIdLogin('.$custom_script['value'].');" style="width:'.$customWidth.'px !important;padding-top:'.($customHeight-29).'px !important;padding-bottom:'.($customHeight-29).'px !important;margin-bottom:'.($spacebetweenicons-5).'px !important;background:'."#".$customBackground.'!important" class="btn btn-block btn-social btn-facebook  btn-custom-size login-button" >
              <i style="padding-top:'.($customHeight-35).'px !important" class="fa fa-facebook"></i>
              '.variable_get('oxd_openid_login_button_customize_text').' '.$custom_script['name'].'</a>';
            }
            else{
              $html.='<a  onClick="oxdOpenIdLogin('.$custom_script['value'].');" title="'.$customTextofTitle .' '. $custom_script['name'].'">
              <i style="width:'.$customSize.'px !important;height:'.$customSize.'px !important;margin-left:'.($spacebetweenicons-4).'px !important;background:'."#".$customBackground.' !important;font-size:'.($customSize-16).'px !important;" class="fa fa-facebook custom-login-button '.$selected_theme.'" ></i></a>';
            }
          }
        }
      }
      $html.='<br>
    </div>
    <br>';
  } else {
    $html.='<div>No apps configured. Please contact your administrator.</div>';
  }
  return $html;
}

function oxd_openid_login_validate(){
  global $base_url;
  if( isset( $_REQUEST['gluuOption'] ) and strpos( $_REQUEST['gluuOption'], 'getOxdSocialLogin' ) !== false ) {
    $http = isset($_SERVER['HTTPS']) && !empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off' ? "https://" : "http://";
    $parts = parse_url($http . $_SERVER["HTTP_HOST"] . $_SERVER["REQUEST_URI"]);
    parse_str($parts['query'], $query);
    $conf = variable_get('gluu_config');
    if(variable_get('oxd_id')){
      if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {
        if(!exec('netstat -aon |find/i "listening" |find "'.$conf['oxd_host_port'].'"')){
          echo "<script>
                  alert('Oxd server is not switched on.');window.location.href='".$base_url."';
               </script>";
          exit;
        }
      } else {
        if(!exec('netstat -tulpn | grep :'.$conf['oxd_host_port'])){
          echo "<script>
                  alert('Oxd server is not switched on.');window.location.href='".$base_url."';
               </script>";
          exit;
        }
      }
    }
    $get_authorization_url = new Get_authorization_url();
    $get_authorization_url->setRequestOxdId(variable_get('oxd_id'));
    $get_authorization_url->setRequestAcrValues([$_REQUEST['app_name']]);
    $get_authorization_url->request();
    header('Location: ' . $get_authorization_url->getResponseAuthorizationUrl());
    exit;
  }
  if(isset( $_REQUEST['gluuOption'] ) and strpos( $_REQUEST['gluuOption'], 'oxdOpenId' ) !== false ){
    $http = isset($_SERVER['HTTPS']) && !empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off' ? "https://" : "http://";
    $parts = parse_url($http . $_SERVER["HTTP_HOST"] . $_SERVER["REQUEST_URI"]);
    parse_str($parts['query'], $query);
    $config_option = variable_get( 'gluu_config' );
    $conf = variable_get('gluu_config');
    $get_tokens_by_code = new Get_tokens_by_code();
    $get_tokens_by_code->setRequestOxdId(variable_get('oxd_id'));
    $get_tokens_by_code->setRequestCode($_REQUEST['code']);
    $get_tokens_by_code->setRequestState($_REQUEST['state']);
    $get_tokens_by_code->setRequestScopes($config_option["scope"]);
    $get_tokens_by_code->request();

    $get_tokens_by_code_array = $get_tokens_by_code->getResponseObject()->data->id_token_claims;
    $_SESSION['user_oxd_id_token']= $get_tokens_by_code->getResponseIdToken();
    $_SESSION['user_oxd_access_token']=  $get_tokens_by_code->getResponseAccessToken();
    $_SESSION['session_states']=  $_REQUEST['session_state'];
    $_SESSION['states']=  $_REQUEST['state'];
    $get_user_info = new Get_user_info();
    $get_user_info->setRequestOxdId(variable_get('oxd_id'));
    $get_user_info->setRequestAccessToken($get_tokens_by_code->getResponseAccessToken());
    $get_user_info->request();
    $get_user_info_array = $get_user_info->getResponseObject()->data->claims;

    $reg_email = '';

    if(!empty($get_user_info_array->email[0])){
      $reg_email = $get_user_info_array->email[0];
    }elseif(!empty($get_tokens_by_code_array->email[0])){
      $reg_email = $get_tokens_by_code_array->email[0];
    }

    $username = '';
    if(!empty($get_user_info->getResponsePreferredUsername())){
      $username = $get_user_info->getResponsePreferredUsername();
    }else {
      $email_split = explode("@", $reg_email);
      $username = $email_split[0];
    }
    $account = user_external_load($username);
    if (!$account) {
      $userinfo = array(
          'name' => $username,
          'pass' => user_password(),
          'mail' => $reg_email,
          'init' => $reg_email,
          'status' => 1,
          'access' => REQUEST_TIME,
      );
      $account = user_save(drupal_anonymous_user(), $userinfo);
      if (!$account) {
        drupal_set_message(t("Error saving user account."), 'error');
        return;
      }
      user_set_authmaps($account, array("authname_gluu_sso" => $username));
    }
    $form_state['uid'] = $account->uid;
    user_login_submit(array(), $form_state);
    drupal_goto();

  }
}

function gluu_sso_user_logout($account){
  if(isset($_SESSION['user_oxd_id_token']) && !empty($_SESSION['user_oxd_id_token'])){
    $config_option = variable_get( 'gluu_config' );
    $oxd_id = variable_get( 'oxd_id' );
    $logout = new Logout();
    $logout->setRequestOxdId($oxd_id);
    $logout->setRequestIdToken($_SESSION['user_oxd_id_token']);
    $logout->setRequestPostLogoutRedirectUri($config_option['logout_redirect_uri']);
    $logout->setRequestSessionState($_SESSION['session_states']);
    $logout->setRequestState($_SESSION['states']);
    $logout->request();
    if (isset($_SESSION['user_oxd_id_token'])){
      unset($_SESSION['user_oxd_id_token']);
    }
    if (isset($_SESSION['states'])){
      unset($_SESSION['states']);
    }
    if (isset($_SESSION['user_oxd_access_token'])){
      unset($_SESSION['user_oxd_access_token']);
    }
    if (isset($_SESSION['session_states'])){
      unset($_SESSION['session_states']);
    }

    session_destroy();
    header('Location: ' . $logout->getResponseObject()->data->uri);
    exit;
  }else{
    if (isset($_SESSION['user_oxd_id_token'])){
      unset($_SESSION['user_oxd_id_token']);
    }
    if (isset($_SESSION['states'])){
      unset($_SESSION['states']);
    }
    if (isset($_SESSION['user_oxd_access_token'])){
      unset($_SESSION['user_oxd_access_token']);
    }
    if (isset($_SESSION['session_states'])){
      unset($_SESSION['session_states']);
    }
    session_destroy();
  }
}

function gluu_sso_init() {
  global $base_url;
  if (isset($_REQUEST['option']) and strpos($_REQUEST['option'], 'allLogout') !== false) {
    if (isset($_SESSION['user_oxd_id_token'])){
      unset($_SESSION['user_oxd_id_token']);
    }
    if (isset($_SESSION['states'])){
      unset($_SESSION['states']);
    }
    if (isset($_SESSION['user_oxd_access_token'])){
      unset($_SESSION['user_oxd_access_token']);
    }
    if (isset($_SESSION['session_states'])){
      unset($_SESSION['session_states']);
    }
    $_SESSION = array();
    session_destroy();
    header('Location: ' .$base_url );
  }

}